{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gargi\\\\Documents\\\\MyProjects\\\\slotmachinegame\\\\src\\\\SlotMachine.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlotMachine = props => {\n  let x = props.x;\n  let y = props.y;\n  let z = props.z;\n  if (x === y && y === z) {\n    console.log(\"matched\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"This is matched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"This is not matched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n_c = SlotMachine;\nexport default SlotMachine;\nvar _c;\n$RefreshReg$(_c, \"SlotMachine\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SlotMachine","props","x","y","z","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gargi/Documents/MyProjects/slotmachinegame/src/SlotMachine.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst SlotMachine = (props) => {\r\n    let x = props.x;\r\n    let y = props.y;\r\n    let z = props.z;\r\n    \r\n    if(x===y && y===z) {\r\n      console.log(\"matched\");\r\n      return (\r\n        <>\r\n        <div className='slot_inner'>\r\n          <h3>{x} {y} {z}</h3>\r\n          <h3>This is matched</h3>\r\n       \r\n        </div>\r\n        </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n        <div className='slot_inner'>\r\n          <h3>{x} {y} {z}</h3>\r\n          <h3>This is not matched</h3>\r\n         \r\n        </div>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default SlotMachine;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC3B,IAAIC,CAAC,GAAGD,KAAK,CAACC,CAAC;EACf,IAAIC,CAAC,GAAGF,KAAK,CAACE,CAAC;EACf,IAAIC,CAAC,GAAGH,KAAK,CAACG,CAAC;EAEf,IAAGF,CAAC,KAAGC,CAAC,IAAIA,CAAC,KAAGC,CAAC,EAAE;IACjBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,oBACET,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACAV,OAAA;QAAKW,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBV,OAAA;UAAAU,QAAA,GAAKL,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACpBf,OAAA;UAAAU,QAAA,EAAI;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEpB,iBACH;EAEP,CAAC,MAAM;IACL,oBACEf,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACAV,OAAA;QAAKW,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBV,OAAA;UAAAU,QAAA,GAAKL,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACpBf,OAAA;UAAAU,QAAA,EAAI;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAExB,iBACH;EAEP;AACF,CAAC;AAAAC,EAAA,GA3BGb,WAAW;AA6Bf,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}